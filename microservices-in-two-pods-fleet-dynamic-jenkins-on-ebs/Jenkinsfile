pipeline {
  options {
    buildDiscarder(logRotator(daysToKeepStr: '1', numToKeepStr: '3'))
    disableConcurrentBuilds()
    timestamps()
    timeout(time: 10, unit: 'MINUTES')
  }
  agent {
      kubernetes {
          label 'bibi-web-app'
          idleMinutes 5
          yamlFile 'microservices-in-two-pods-fleet-dynamic-jenkins-on-ebs/jenkins_eks.yaml'
          defaultContainer 'jnlp'
       }
   }


 stages {
    stage('Build') {
          steps {
                container('docker') { //we run this step from dind - docker in docker - container in the docker agent pod
                    withCredentials([usernamePassword(credentialsId: 'aws_hub_ecr_repo', passwordVariable: 'pass', usernameVariable: 'user')]) {
                      sh """
                         which docker
                         echo "$pass"
                         echo "$pass" | docker login --username $user --password-stdin 019273956931.dkr.ecr.eu-west-1.amazonaws.com
                         docker pull 019273956931.dkr.ecr.eu-west-1.amazonaws.com/bibi-ecr-repo:ubuntu_1.0.26
                      """
                    }
                }
          }//steps
    }//stage


    stage('Push') {
      steps {
            container('inbound-agent') {
              sh """
                 kubectl get svc
                 cd microservices-in-two-pods-fleet-dynamic-jenkins-on-ebs
                 kubectl apply -f bibi-ns.yaml
                 kubectl apply -f mongo-secret.yaml -n bibi-ns
                 kubectl apply -f mongo-svc.yaml -n bibi-ns
                 kubectl apply -f mongodb-deployment.yaml -n bibi-ns
                 kubectl apply -f bibi_web_server_ex1.yaml -n bibi-ns
                 sleep 240
              """
        }
      }//steps
    }//stage
  }//stages
post {
        always {
            container('inbound-agent') {
                  sh """
                    cd microservices-in-two-pods-fleet-dynamic-jenkins-on-ebs
                    kubectl delete -f bibi_web_server_ex1.yaml -n bibi-ns
                    kubectl delete -f mongodb-deployment.yaml -n bibi-ns
                    kubectl delete -f mongo-svc.yaml -n bibi-ns
                    kubectl delete -f mongo-secret.yaml -n bibi-ns
                    kubectl delete -f bibi-ns.yaml
                  """
            }
        }
  }
}